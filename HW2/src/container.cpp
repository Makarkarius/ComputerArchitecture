//------------------------------------------------------------------------------
// container.cpp - содержит функции обработки контейнера
//------------------------------------------------------------------------------

#include "container.h"

//------------------------------------------------------------------------------
// Конуструктор контейнера
Container::Container() : len(0) {};

//------------------------------------------------------------------------------
// Деструктор контейнера
Container::~Container() {
    Clear();
}

//------------------------------------------------------------------------------
// Очистка контейнера от элементов (освобождение памяти)
void Container::Clear() {
    for (int i = 0; i < len; ++i) {
        delete cont[i];
    }
    len = 0;
}

//------------------------------------------------------------------------------
// Ввод содержимого контейнера из указанного потока
void Container::In(FILE *file) {
    while (!feof(file)) {
        if ((cont[len] = Plant::StaticIn(file)) != nullptr) {
            ++len;
        }
    }
}

//------------------------------------------------------------------------------
// Случайный ввод содержимого контейнера
void Container::InRnd(int size) {
    while (len < size) {
        if ((cont[len] = Plant::StaticInRnd()) != nullptr) {
            ++len;
        }
    }
}

//------------------------------------------------------------------------------
// Вывод содержимого контейнера в указанный поток
void Container::Out(FILE *file) {
    fprintf(file, "Container contains %d elements.\n", len);
    for (int i = 0; i < len; ++i) {
        fprintf(file, "%d: ", i);
        cont[i]->Out(file);
    }
}

//------------------------------------------------------------------------------
// Сортировка контейнера по возрастанию с помощью прямого включения
void Container::Sort() {
    for (int i = 1; i < len; ++i) {
        Plant *curr_val = cont[i];
        int idx = i;
        while ((idx > 0) && (cont[idx - 1]->Quotient() > curr_val->Quotient())) {
            cont[idx] = cont[idx - 1];
            --idx;
        }
        cont[idx] = curr_val;
    }
}
